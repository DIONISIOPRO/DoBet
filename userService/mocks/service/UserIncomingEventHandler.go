// Code generated by mockery v2.10.4. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// UserIncomingEventHandler is an autogenerated mock type for the UserIncomingEventHandler type
type UserIncomingEventHandler struct {
	mock.Mock
}

// AddBalance provides a mock function with given fields: data
func (_m *UserIncomingEventHandler) AddBalance(data []byte) error {
	ret := _m.Called(data)

	var r0 error
	if rf, ok := ret.Get(0).(func([]byte) error); ok {
		r0 = rf(data)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// CheckMoney provides a mock function with given fields: data
func (_m *UserIncomingEventHandler) CheckMoney(data []byte) error {
	ret := _m.Called(data)

	var r0 error
	if rf, ok := ret.Get(0).(func([]byte) error); ok {
		r0 = rf(data)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// ReserveMoney provides a mock function with given fields: userid, money, hash
func (_m *UserIncomingEventHandler) ReserveMoney(userid string, money float64, hash string) {
	_m.Called(userid, money, hash)
}

// SubtractBalance provides a mock function with given fields: data
func (_m *UserIncomingEventHandler) SubtractBalance(data []byte) error {
	ret := _m.Called(data)

	var r0 error
	if rf, ok := ret.Get(0).(func([]byte) error); ok {
		r0 = rf(data)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// UnReserveMoney provides a mock function with given fields: userid, money, hash
func (_m *UserIncomingEventHandler) UnReserveMoney(userid string, money float64, hash string) {
	_m.Called(userid, money, hash)
}
